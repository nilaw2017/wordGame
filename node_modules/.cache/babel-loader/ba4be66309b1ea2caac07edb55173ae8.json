{"ast":null,"code":"const textElement = document.getElementById('text');\nconst optionbuttonsElement = document.getElementById('option-buttons');\nconst hungerElement = document.getElementById('hunger');\nconst thirstElement = document.getElementById('thirst');\nconst staminaElement = document.getElementById('stamina');\nlet state = {\n  hunger: 100,\n  thirst: 100,\n  stamina: 100,\n  amount: 1000\n};\n\nstartGame = () => {\n  state = {};\n  showTextNodes(1); // hungerUpdate(1)\n};\n\nhungerUpdate = hungerIndex => {\n  const hunger = textNodes.find(textNode => textNode.id === hungerIndex);\n  hungerElement.innerText = hunger.option[0].setState.hunger; // console.log(hunger)\n};\n\nshowTextNodes = textNodeIndex => {\n  const textNode = textNodes.find(textNode => textNode.id === textNodeIndex);\n  textElement.innerText = textNode.text; // hungerElement.innerText = textNode.option[0].setState.hunger;\n  // thirstElement.innerText = textNode.option[0].setState.thirst;\n  // staminaElement.innerText = textNode.option[0].setState.stamina;\n\n  hungerElement.innerText = state.hunger;\n  thirstElement.innerText = state.thirst;\n  staminaElement.innerText = state.stamina;\n\n  while (optionbuttonsElement.firstChild) {\n    optionbuttonsElement.removeChild(optionbuttonsElement.firstChild);\n  } // console.log(textNode)\n\n\n  textNode.option.forEach(option => {\n    if (showOption(option)) {\n      const button = document.createElement('button');\n      button.innerText = option.text;\n      button.classList.add('btn');\n      button.addEventListener('click', () => {\n        selectOption(option);\n      });\n      optionbuttonsElement.appendChild(button);\n    }\n  });\n  textNode.option.forEach(option => {// console.log(\"option\")\n  });\n};\n\nshowOption = option => {\n  // return true;\n  return option.requiredState == null || option.requiredState(state);\n};\n\nselectOption = option => {\n  const newState = option.nextStage;\n  state = Object.assign(state, option.setState);\n  showTextNodes(newState);\n};\n\nconst textNodes = [{\n  id: 1,\n  text: \"This is part 1\",\n  option: [{\n    text: 'Go right',\n    setState: {\n      hunger: state.hunger,\n      thirst: state.thirst,\n      stamina: state.stamina,\n      amount: state.amount\n    },\n    nextStage: 2\n  }, {\n    text: 'Go left',\n    setState: {\n      hunger: state.hunger,\n      thirst: state.thirst,\n      stamina: state.stamina,\n      amount: state.amount\n    },\n    nextStage: 2\n  }]\n}, {\n  id: 2,\n  text: \"This is part 2\",\n  option: [{\n    text: 'Eat momo (Rs.100 = +20 Hunger, -10 Thirst)',\n    requiredState: currentState => currentState.amount >= 100,\n    setState: {\n      hunger: state.hunger = state.hunger + 20,\n      thirst: state.thirst,\n      stamina: state.stamina,\n      amount: state.amount\n    },\n    nextStage: 3\n  }, {\n    text: 'Drink Water (Rs.20 = +10 Hunger, +30 Thirst',\n    requiredState: currentState => currentState.amount >= 20,\n    setState: {\n      hunger: state.hunger,\n      thirst: state.thirst,\n      stamina: state.stamina,\n      amount: state.amount\n    },\n    nextStage: 3\n  }, {\n    text: 'Take Rest (Free = +20 Stamina, -5 Hunger, -10 Thirst)',\n    requiredState: currentState => currentState.amount >= 0,\n    setState: {\n      hunger: state.hunger,\n      thirst: state.thirst,\n      stamina: state.stamina,\n      amount: state.amount\n    },\n    nextStage: 3\n  }]\n}, {\n  id: 3,\n  text: \"This is part 3\",\n  option: [{\n    text: 'Go jungle',\n    setState: {\n      hunger: state.hunger = state.hunger + 40,\n      thirst: state.thirst,\n      stamina: state.stamina,\n      amount: state.amount\n    },\n    nextStage: 4\n  }, {\n    text: 'Go city',\n    setState: {\n      hunger: state.hunger,\n      thirst: state.thirst,\n      stamina: state.stamina,\n      amount: state.amount\n    },\n    nextStage: 5\n  }]\n}];\nstartGame();","map":{"version":3,"sources":["/home/nilaw/Desktop/webDev/ashley/eventGame/game-app/src/game.js"],"names":["textElement","document","getElementById","optionbuttonsElement","hungerElement","thirstElement","staminaElement","state","hunger","thirst","stamina","amount","startGame","showTextNodes","hungerUpdate","hungerIndex","textNodes","find","textNode","id","innerText","option","setState","textNodeIndex","text","firstChild","removeChild","forEach","showOption","button","createElement","classList","add","addEventListener","selectOption","appendChild","requiredState","newState","nextStage","Object","assign","currentState"],"mappings":"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","sourcesContent":["\nconst textElement = document.getElementById('text');\nconst optionbuttonsElement = document.getElementById('option-buttons');\nconst hungerElement = document.getElementById('hunger');\nconst thirstElement = document.getElementById('thirst');\nconst staminaElement = document.getElementById('stamina');\n\nlet state = {\n    hunger: 100,\n    thirst: 100,\n    stamina: 100,\n    amount: 1000\n}\n\nstartGame = () => {\n    state = {}\n    showTextNodes(1)\n    // hungerUpdate(1)\n}\n\nhungerUpdate = (hungerIndex) => {\n    const hunger = textNodes.find(textNode => textNode.id === hungerIndex)\n    hungerElement.innerText = hunger.option[0].setState.hunger;\n    // console.log(hunger)\n}\n\nshowTextNodes = (textNodeIndex) => {\n    const textNode = textNodes.find(textNode => textNode.id === textNodeIndex)\n    textElement.innerText = textNode.text;\n    // hungerElement.innerText = textNode.option[0].setState.hunger;\n    // thirstElement.innerText = textNode.option[0].setState.thirst;\n    // staminaElement.innerText = textNode.option[0].setState.stamina;\n\n    hungerElement.innerText = state.hunger;\n    thirstElement.innerText = state.thirst;\n    staminaElement.innerText = state.stamina;    \n    \n    while (optionbuttonsElement.firstChild) {\n        optionbuttonsElement.removeChild(optionbuttonsElement.firstChild)\n    }\n    // console.log(textNode)\n    textNode.option.forEach(option => {\n        if (showOption(option)) {\n            const button = document.createElement('button');\n            button.innerText = option.text;\n            button.classList.add('btn');\n            button.addEventListener('click', () => {\n                selectOption(option)\n            });\n            optionbuttonsElement.appendChild(button)\n        }\n    });\n    textNode.option.forEach(option => {\n        // console.log(\"option\")\n    })\n}\n\nshowOption = (option) => {\n    // return true;\n    return option.requiredState == null || option.requiredState(state)\n}\n\nselectOption = (option) => {\n    const newState = option.nextStage\n    state = Object.assign(state, option.setState)\n    showTextNodes(newState)\n}\n\nconst textNodes = [\n    {\n        id: 1,\n        text: \"This is part 1\",\n        option: [\n            {\n                text: 'Go right',\n                setState: { \n                    hunger: state.hunger, \n                    thirst: state.thirst, \n                    stamina: state.stamina, \n                    amount: state.amount },\n                nextStage: 2\n            },\n            {\n                text: 'Go left',\n                setState: { \n                    hunger: state.hunger, \n                    thirst: state.thirst, \n                    stamina: state.stamina, \n                    amount: state.amount },\n                nextStage: 2\n            }\n        ]\n    },\n    {\n        id: 2,\n        text: \"This is part 2\",\n        \n        option: [\n            {\n                text: 'Eat momo (Rs.100 = +20 Hunger, -10 Thirst)',\n                requiredState: (currentState) => currentState.amount >= 100,\n                setState: { \n                    hunger: state.hunger = state.hunger+20,\n                    thirst: state.thirst, \n                    stamina: state.stamina, \n                    amount: state.amount \n                },\n                nextStage: 3\n            },\n            {\n                text: 'Drink Water (Rs.20 = +10 Hunger, +30 Thirst',\n                requiredState: (currentState) => currentState.amount >= 20,\n                setState: { \n                    hunger: state.hunger, \n                    thirst: state.thirst, \n                    stamina: state.stamina, \n                    amount: state.amount \n                },\n                nextStage: 3\n            },\n            {\n                text: 'Take Rest (Free = +20 Stamina, -5 Hunger, -10 Thirst)',\n                requiredState: (currentState) => currentState.amount >= 0,\n                setState: { \n                    hunger: state.hunger, \n                    thirst: state.thirst, \n                    stamina: state.stamina, \n                    amount: state.amount \n                },\n                nextStage: 3\n            }\n        ]\n    },\n    {\n        id: 3,\n        text: \"This is part 3\",\n        option: [\n            {\n                text: 'Go jungle',\n                setState: { \n                    hunger: state.hunger = state.hunger+40, \n                    thirst: state.thirst, \n                    stamina: state.stamina, \n                    amount: state.amount },\n                nextStage: 4\n            },\n            {\n                text: 'Go city',\n                setState: { \n                    hunger: state.hunger, \n                    thirst: state.thirst, \n                    stamina: state.stamina, \n                    amount: state.amount },\n                nextStage: 5\n            }\n        ]\n\n    },\n]\n\nstartGame();"]},"metadata":{},"sourceType":"module"}